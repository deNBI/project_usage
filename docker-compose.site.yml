# contains configuation for a production setup a at site with access to an
# openstack instance
---
version: "3.4"
services:
  exporter:
    image: tluettje/os_project_usage_exporter:v4
    env_file:
      - usage-openrc
    networks:
      - usage_exporter
    environment:
      # You must NOT change this once you started the service in production mode
      # since it is passed through to openstack to request the total usages
      # since this date. Changing could lead to a lower value than before
      - USAGE_EXPORTER_START_DATE=2018-12-01
    expose:
      - "8080"
  # prometheus instance responsible for monitoring
  prometheus:
    image: prom/prometheus:v2.7.1
    # use self build Dockerfile as alternative
    # build: prod/local_prometheus
    networks:
      - usage_exporter
    expose:
      - "9090"
    volumes:
      - "./prod/local_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
  prometheus_proxy:
    # use the one below to have haproxy debug log directly to stdout including
    # every request with auth headers
    # image: mminks/haproxy-docker-logging
    image: haproxy:1.8-alpine
    # use self build Dockerfile as alternative
    # build: prod/haproxy
    networks:
      - usage_exporter
    expose:
      # this port must be reachable by the global prometheus instance inside the
      # portal
      # also setup some encryption to or in front of it, otherwise the whole
      # authentication stuff is useless
      - "80"
    volumes:
      - "./prod/haproxy/etc/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
  grafana:
    image: grafana/grafana:5.4.2
    # use self build Dockerfile as alternative
    # build: prod/grafana
    depends_on:
      - prometheus
    networks:
      - usage_exporter
    volumes:
      - ./prod/grafana/provisioning/:/etc/grafana/provisioning
    env_file:
      - ./prod/grafana.env
    expose:
      - "3000"
networks:
  usage_exporter:
