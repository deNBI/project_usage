---
version: "3"
services:
  # {{{ site-a
  site-a_exporter:
    environment:
      - USAGE_EXPORTER_DUMMY_FILE=/code/resources/low_usage.toml
      - USAGE_EXPORTER_UPDATE_INTERVAL=5
    image: tluettje/openstack-tenant-usage-exporter:v6
    # needed in production
    # env_file:
    #   - admin-openrc
    networks:
      - site-a
    expose:
      - "8080"
  site-a_prom_proxy:
    build: ./haproxy
    networks:
      - site-a
      - public
    expose:
      - "80"
    volumes:
      - "./haproxy/etc:/usr/local/etc/haproxy:ro"
  # local prometheus instance responsible for monitoring
  site-a_prometheus:
    build: ./local_prometheus
    networks:
      - site-a
    ports:
      - "8080:9090"
    expose:
      - "9090"
  # }}}
  # {{{ site-b
  site-b_exporter:
    environment:
      - USAGE_EXPORTER_DUMMY_FILE=/code/resources/dummy_machines.toml
      - USAGE_EXPORTER_UPDATE_INTERVAL=5
    image: tluettje/openstack-tenant-usage-exporter:v6
    # needed in production
    # env_file:
    #   - admin-openrc
    networks:
      - site-b
    expose:
      - "8080"
  site-b_prom_proxy:
    build: ./haproxy
    networks:
      - site-b
      - public
    expose:
      - "80"
    volumes:
      - "./haproxy/etc:/usr/local/etc/haproxy:ro"
  # local prometheus instance responsible for monitoring
  site-b_prometheus:
    build: ./local_prometheus
    networks:
      - site-b
    ports:
      - "8081:9090"
    expose:
      - "9090"
  # }}}
  # {{{ site-c
  #  site-c_exporter:
  #    environment:
  #      - USAGE_EXPORTER_DUMMY_FILE=/code/resources/high_usage.toml
  #      - USAGE_EXPORTER_UPDATE_INTERVAL=5
  #    image: tluettje/openstack-tenant-usage-exporter:v6
  #    # needed in production
  #    # env_file:
  #    #   - admin-openrc
  #    networks:
  #      - site-c
  #    expose:
  #      - "8080"
  #  site-c_prom_proxy:
  #    build: ./haproxy
  #    networks:
  #      - site-c
  #      - public
  #    expose:
  #      - "80"
  #    volumes:
  #      - "./haproxy/etc:/usr/local/etc/haproxy:ro"
  #  # local prometheus instance responsible for monitoring
  #  site-c_prometheus:
  #    build: ./local_prometheus
  #    networks:
  #      - site-c
  #    ports:
  #      - "8082:9090"
  #    expose:
  #      - "9090"
  # }}}
  # global prometheus instance scraping data from the local instance
  global_prometheus:
    build: ./global_prometheus
    networks:
      - portal
      - public
    ports:
      - "80:9090"
    expose:
      - "9090"
  influx_db:
    image: influxdb:1.7-alpine
    networks:
      - portal
    environment:
      - INFLUXDB_GRAPHITE_ENABLED=true
      - INFLUXDB_REPORTING_DISABLED=true
      # automatically initialize the following db
      - INFLUXDB_DB=global_prometheus
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=secret
      - INFLUXDB_USER=prometheus
      - INFLUXDB_USER_PASSWORD=secret
    expose:
      - "8086"
    ports:
      - "8086:8086"
  grafana:
    image: grafana/grafana:5.4.0
    depends_on:
      - global_prometheus
    networks:
      - portal
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning
    ports:
      - "3000:3000"

# volumes:
#   local_prometheus:
#   global_prometheus:

networks:
  # internal network at single location, e.g. bielefeld
  site-a:
  site-b:
  site-c:
  # the real 'internet', only connection betweent the two other networks
  public:
  # internal network inside the denbi portal
  portal:

# vim: foldmethod=marker
