---
version: "3.5"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "5"

services:
  # global prometheus instance scraping data from the local instances
  portal_prometheus:
    image: "prom/prometheus:v2.37.0"
    container_name: portal_prometheus
    networks:
      portal:
        aliases:
          - prometheus
    logging:
      *default-logging
    expose:
      - "9090"

  portal_timescaledb:
    image: "timescale/timescaledb-ha:pg14.3-ts2.7.0-latest"
    container_name: portal_timescaledb
    command: postgres -c shared_preload_libraries=timescaledb
    networks:
      - portal
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./prod/setup_timescaledb.sh:/docker-entrypoint-initdb.d/setup_timescaledb.sh
      - ${POSTGRES_DATA_FOLDER}:/home/postgres/pgdata
  portal_promscale:
    container_name: portal_promscale
    image: "timescale/promscale:0.13.0"
    ports:
      - 9201:9201/tcp
    restart: on-failure
    networks:
      - portal
    depends_on:
      - portal_timescaledb
      - portal_prometheus
    environment:
      PROMSCALE_DB_CONNECT_RETRIES: 10
      PROMSCALE_WEB_TELEMETRY_PATH: /metrics-text
      PROMSCALE_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=allow

  portal_grafana:
    image: "grafana/grafana:9.0.2"
    container_name: portal_grafana
    depends_on:
      - portal_prometheus
    logging:
      *default-logging
    networks:
      - portal
    environment:
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_SERVER_ROOT_URL
    volumes:
      - "./shared/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro"
      - "./shared/grafana/project_usages.json:/etc/grafana/provisioning/dashboards/project_usages.json:ro"

  portal_credits:
    image: "denbicloud/os_credits:${CREDITS_TAG}"
    container_name: portal_credits
    restart: always
    networks:
      - portal
    logging:
      *default-logging
    healthcheck:
      test: wget http://localhost/ping -qO /dev/null || return 1
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - OS_CREDITS_PROJECT_WHITELIST
      - API_KEY
      - API_CONTACT_KEY
      - API_CONTACT_BASE_URL
      - MAIL_CONTACT_URL
      - METRICS_TO_BILL
    depends_on:
      - portal_timescaledb
      - portal_promscale

networks:
  portal:
