---
version: "3.5"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "5"

services:
  # global prometheus instance scraping data from the local instances
  portal_prometheus:
    image: "prom/prometheus:v2.32.1"
    container_name: portal_prometheus
    networks:
      portal:
        aliases:
          - prometheus
    logging:
      *default-logging
    expose:
      - "9090"

  portal_timescaledb:
    image: "timescale/timescaledb:2.5.1-pg14"
    container_name: portal_timescaledb
    command: postgres -c shared_preload_libraries=timescaledb
    networks:
      - portal
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: credits_db
    volumes:
      - ./prod/setup_timescaledb.sh:/docker-entrypoint-initdb.d/setup_timescaledb.sh
    ports:
      - "5432:5432"
  portal_promscale:
    container_name: portal_promscale
    image: timescale/promscale:latest
    ports:
      - 9201:9201/tcp
    restart: on-failure
    networks:
      - portal
    depends_on:
      - portal_timescaledb
      - portal_prometheus
    environment:
      PROMSCALE_DB_CONNECT_RETRIES: 10
      PROMSCALE_WEB_TELEMETRY_PATH: /metrics-text
      PROMSCALE_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=allow
#  portal_influxdb:
#    image: "influxdb:1.8.10-alpine"
#    # a fixed name is necessary for the credits service to connect
#    container_name: portal_influxdb
#    networks:
#      - portal
#    logging:
#      *default-logging
#    environment:
#      - INFLUXDB_GRAPHITE_ENABLED
#      - INFLUXDB_REPORTING_DISABLED
#      - INFLUXDB_DB
#      - INFLUXDB_HTTP_AUTH_ENABLED
#      - INFLUXDB_ADMIN_USER
#      - INFLUXDB_ADMIN_PASSWORD
#      - INFLUXDB_USER
#      - INFLUXDB_USER_PASSWORD
#      - CREDITS_HISTORY_DB
#      - INFLUXDB_DATA_CACHE_MAX_MEMORY_SIZE
#    volumes:
#      - "./prod/setup_timescaledb.sh:/docker-entrypoint-initdb.d/01-setup.sh:ro"
#    expose:
#      - "8086"
#    healthcheck:
#      test: wget http://localhost:8086/ping -qO /dev/null || return 1
#      interval: 2m
#      timeout: 10s
#      retries: 3
#      start_period: 60s
#    restart: always

  portal_grafana:
    image: "grafana/grafana:8.3.3"
    container_name: portal_grafana
    depends_on:
      - portal_prometheus
    logging:
      *default-logging
    networks:
      - portal
    environment:
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_SERVER_ROOT_URL
    volumes:
      - "./shared/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro"
      - "./shared/grafana/project_usages.json:/etc/grafana/provisioning/dashboards/project_usages.json:ro"

  portal_credits:
    image: "denbicloud/os_credits:${CREDITS_TAG}"
    container_name: portal_credits
    restart: always
    networks:
      - portal
    logging:
      *default-logging
    healthcheck:
      test: wget http://localhost/ping -qO /dev/null || return 1
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - OS_CREDITS_PERUN_LOGIN
      - OS_CREDITS_PERUN_PASSWORD
      - OS_CREDITS_PERUN_VO_ID
      - NOTIFICATION_TO_OVERWRITE
      - OS_CREDITS_PROJECT_WHITELIST
      - API_KEY
      - MAIL_SMTP_SERVER
      - MAIL_SMTP_PORT
    depends_on:
      - portal_timescaledb
      - portal_promscale

networks:
  portal:
