---
version: "3.4"
services:
  # sites producing dummy data for development environment without access to a
  # real openstack instance
  # aliases have to be used to prevent name collisions, in production only one
  # `local_prometheus` will be present at one location
  # {{{ site-a
  site-a_exporter:
    env_file:
      - dev/local_exporter.env
    environment:
      # it makes sense to use a different profile per emulated site
      # or at least a different value for OS_EXPORTER_PROJECT_DOMAINS
      # see https://github.com/gilbus/OS_project_usage_exporter/
      - USAGE_EXPORTER_DUMMY_FILE=/code/resources/dummy_machines.toml
    image: tluettje/os_project_usage_exporter:v2
    networks:
      site-a:
        aliases:
          - usage_exporter
    expose:
      - "8080"
  site-a_prom_proxy:
    image: mminks/haproxy-docker-logging
    networks:
      - site-a
      - public
    expose:
      - "80"
    volumes:
      - "./dev/haproxy/etc:/usr/local/etc/haproxy:ro"
  # local prometheus instance responsible for monitoring
  site-a_prometheus:
    image: prom/prometheus
    volumes:
      - "./dev/local_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      site-a:
        aliases:
          - prometheus
    ports:
      # 8081 -> site_a, 8082 -> site_b ...
      - "8081:9090"
    expose:
      - "9090"
  site-a_grafana:
    image: grafana/grafana:5.4.0
    depends_on:
      - site-a_prometheus
    networks:
      - site-a
    volumes:
      - ./dev/grafana/provisioning/:/etc/grafana/provisioning
    env_file:
      - ./dev/grafana.env
    ports:
      # 3001 -> site_a, 3002 -> site_b ...
      - "3001:3000"
  # }}}
  # {{{ site-b
  site-b_exporter:
    env_file:
      - dev/local_exporter.env
    environment:
      # it makes sense to use a different profile per emulated site
      # or at least a different value for OS_EXPORTER_PROJECT_DOMAINS
      # see https://github.com/gilbus/OS_project_usage_exporter/
      - USAGE_EXPORTER_DUMMY_FILE=/code/resources/low_usage.toml
    image: tluettje/os_project_usage_exporter:v2
    networks:
      site-b:
        aliases:
          - usage_exporter
    expose:
      - "8080"
  site-b_prom_proxy:
    image: mminks/haproxy-docker-logging
    networks:
      - site-b
      - public
    expose:
      - "80"
    volumes:
      - "./dev/haproxy/etc:/usr/local/etc/haproxy:ro"
  # local prometheus instance responsible for monitoring
  site-b_prometheus:
    image: prom/prometheus
    volumes:
      - "./dev/local_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      site-b:
        aliases:
          - prometheus
    ports:
      # 8081 -> site_a, 8082 -> site_b ...
      - "8082:9090"
    expose:
      - "9090"
  site-b_grafana:
    image: grafana/grafana:5.4.0
    depends_on:
      - site-b_prometheus
    networks:
      - site-b
    volumes:
      - ./dev/grafana/provisioning/:/etc/grafana/provisioning
    env_file:
      - ./dev/grafana.env
    ports:
      # 3001 -> site_a, 3002 -> site_b ...
      - "3002:3000"
  # }}}
  prometheus:
    volumes:
      - "./dev/global_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "80:9090"
    networks:
      - public
  influx_db:
    env_file:
      - ./dev/influx_db.env
  grafana:
    env_file:
      - ./dev/grafana.env
    ports:
      - "3000:3000"
networks:
  site-a:
  site-b:
  public:
