---
version: "3.5"
services:
  # sites producing dummy data for development environment without access to a
  # real openstack instance
  # it makes sense to use a different profile per emulated site
  # or at least a different value for OS_EXPORTER_PROJECT_DOMAINS
  # see https://github.com/gilbus/OS_project_usage_exporter/
  # using network aliases to be able to use the same config files, in the end
  # (as in production) there will be only one `usage_exporter` and one
  # `prometheus` (at least inside the defined network)
  #
  # For the first emulated site redefine/reuse the already defined site_*
  # services from docker-compose.site.yml
  # site-b is already defined as a dummy location
  # To emulate further sites:
  # 1. copy-paste the `{{{site-b [...] }}} part`
  # 2. rename site-b to site-c
  # (3.) if going further than c you need to additional networks at the bottom
  # of this file perform some copy-paste in dev/haproxy/haproxy.cfg as well as
  # dev/portal_prometheus/prometheus.yml
  #
  # Prometheus-Ports: 9091 -> site_a, 9092 -> site_b ...
  # Grafana-Ports: 3001 -> site_a, 3002 -> site_b ...
#  site_exporter:
#    container_name: site-a_exporter
#    volumes:
#      - "./dev/exporter_machines_1.toml:/machines.toml:ro"
#    environment:
#      - USAGE_EXPORTER_DUMMY_FILE=/machines.toml
#    networks:
#      site-a:
#        aliases:
#          - usage_exporter
#    expose:
#      - "8080"
#  site_prometheus:
#    container_name: site-a_prometheus
#    volumes:
#      - "./dev/site_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
#    networks:
#      site-a:
#        aliases:
#          - site_prometheus
#    ports:
#      - "9091:9090"
#    expose:
#      - "9090"
#  site_prometheus_proxy:
#    # use a different image which logs every request to stdout
#    image: mminks/haproxy-docker-logging:latest
#    container_name: site-a_prometheus_proxy
#    networks:
#      - site-a
#      - public
#    volumes:
#      - "./dev/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
#  site_grafana:
#    container_name: site-a_grafana
#    depends_on:
#      - site_prometheus
#    networks:
#      site-a:
#        aliases:
#          - site_grafana
#    volumes:
#      - "./dev/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro"
#    ports:
#      - "3001:3000"
  # {{{ site-b
  site_exporter:
    image: os_project_usage_exporter:latest
    container_name: site-b_exporter
    volumes:
      - "./dev/dummy_cc.toml:/dummy_cc.toml"
      - "./dev/dummy_weights.toml:/dummy_weights.toml"
    environment:
      - USAGE_EXPORTER_DUMMY_FILE=/dummy_cc.toml
      - USAGE_EXPORTER_DUMMY_WEIGHTS_FILE=/dummy_weights.toml
      - USAGE_EXPORTER_START_DATE
      - USAGE_EXPORTER_UPDATE_INTERVAL
      - USAGE_EXPORTER_PROJECT_DOMAINS
      - USAGE_EXPORTER_PROJECT_ID
      - USAGE_EXPORTER_PROJECT_MB_WEIGHTS
      - USAGE_EXPORTER_VCPU_WEIGHTS
    networks:
      site-b:
        aliases:
          - usage_exporter
    expose:
      - "8080"
  site_prometheus_proxy:
    image: mminks/haproxy-docker-logging:latest
    container_name: site-b_prometheus_proxy
    networks:
      - site-b
      - public
    expose:
      - "80"
    volumes:
      - "./dev/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
    environment:
      - PORTAL_AUTH_TOKEN
  site_prometheus:
    image: prom/prometheus:${PROMETHEUS_TAG}
    container_name: site-b_prometheus
    volumes:
      - "./dev/site_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      site-b:
        aliases:
          - site_prometheus
    ports:
      - "9092:9093"
    expose:
      - "9090"
  site_grafana:
    image: grafana/grafana:${GRAFANA_TAG}
    container_name: site-b_grafana
    depends_on:
      - site_prometheus
    networks:
      site-b:
        aliases:
          - site_grafana
    volumes:
      - "./dev/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro"
      - "./shared/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro"
      - "./shared/grafana/project_usages.json:/etc/grafana/provisioning/dashboards/project_usages.json:ro"
    environment:
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
    ports:
      - "3002:3000"
  # }}}
  portal_prometheus:
    volumes:
      - "./dev/portal_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9091:9090"
    networks:
      - public
  portal_grafana:
    ports:
      - "3000:3000"
    volumes:
      - "./prod/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro"
  portal_credits:
    image: os_credits-dev
    ports:
      - "8002:80"
    environment:
      - MAIL_NOT_STARTTLS=1
      - MAIL_SMTP_SERVER=portal_smtp_server
  smtp_server:
    image: "python:3.7-alpine"
    container_name: portal_smtp_server
    command: python3 -m smtpd -n -c DebuggingServer 0.0.0.0:25
    environment:
      - PYTHONUNBUFFERED=1
    expose:
      - "25"
    networks:
      - portal
networks:
  site-a:
  site-b:
  site-c:
  public:
