global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).


# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

        # not that useful inside docker container
        #  - job_name: node
        #    # If prometheus-node-exporter is installed, grab stats about the local
        #    # machine by default.
        #    static_configs:
        #      - targets: ['localhost:9100']

        #  - job_name: openstack
        #    static_configs:
        #      - targets: ['192.168.0.5:9183']

  - job_name: 'denbi_cloud_tenant_usage'
    honor_labels: true
    metrics_path: '/federate'

    params:
      'match[]':
        # do not collect any metrics besides the one we are interested in
        - '{job="project_usages",__name__=~"tenant_.*"}'

    static_configs:
      - targets: ['local_prometheus:9090']
        labels:
          location: bi_devstack

remote_write:
  - url:
    "http://influx_db:8086/api/v1/prom/write?db=global_prometheus&u=prometheus&p=secret"

remote_read:
  - url: "http://influx_db:8086/api/v1/prom/read?db=global_prometheus&u=prometheus&p=secret"
